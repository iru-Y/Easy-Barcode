"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.executeWithEnv = void 0;
const architect_1 = require("@angular-devkit/architect");
const build_1 = require("@angular/build");
const core_1 = require("@dotenv-run/core");
const rxjs_1 = require("rxjs");
const get_environment_1 = require("../utils/get-environment");
const index_html_serve_1 = require("../utils/index-html-serve");
const project_1 = require("../utils/project");
const validate_prepare_context_1 = require("../utils/validate-prepare-context");
const executeWithEnv = (options, context) => {
    return (0, rxjs_1.combineLatest)([
        (0, validate_prepare_context_1.validateAndPrepareBuildContext)(options.buildTarget, context),
        (0, project_1.getProjectCwd)(context),
    ]).pipe((0, rxjs_1.switchMap)(([buildTarget, cwd]) => {
        const dotenvRunOptions = {
            ...buildTarget.ngxEnv,
            cwd,
        };
        const { full, raw } = (0, core_1.env)({
            ...dotenvRunOptions,
            global: "_NGX_ENV_",
            environment: (0, get_environment_1.getEnvironment)(buildTarget.configuration),
        });
        context.getTargetOptions = async () => ({
            ...buildTarget.options,
            define: full,
        });
        return (0, build_1.executeDevServerBuilder)(options, context, {
            indexHtmlTransformer: async (content) => (0, index_html_serve_1.indexHtml)(content, raw, dotenvRunOptions.runtime),
        });
    }), (0, rxjs_1.catchError)((e) => {
        console.error(e.message);
        return (0, build_1.executeDevServerBuilder)(options, context);
    }));
};
exports.executeWithEnv = executeWithEnv;
exports.default = (0, architect_1.createBuilder)(exports.executeWithEnv);
//# sourceMappingURL=index.js.map